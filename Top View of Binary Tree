class Solution {
    
    static class Pair {
        Node node;
        int line;
        
        Pair(Node node, int line) {
        this.node = node;
        this.line = line;
        }
    }
    // Function to return a list of nodes visible from the top view
    // from left to right in Binary Tree.
    static ArrayList<Integer> topView(Node root) {
        ArrayList<Integer> ans = new ArrayList<>();
        if (root == null) return ans;

        Map<Integer, Integer> map = new TreeMap<>();
        Queue<Pair> q = new LinkedList<>();
        q.add(new Pair(root, 0));
        
        while(!q.isEmpty()) {
            Pair pair = q.poll();
            Node node = pair.node;
            int line = pair.line;
            
            if(!map.containsKey(line)) {
                map.put(line, node.data);
            }
            
            if(node.left != null) {
                q.add(new Pair(node.left, line-1));
            }
            if(node.right != null) {
                q.add(new Pair(node.right, line+1));
            }
        }
        
        for(Integer key : map.keySet()) {
            ans.add(map.get(key));
        }
        return ans;
    }
}
